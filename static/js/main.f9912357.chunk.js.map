{"version":3,"sources":["Columns.js","Rows.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","row","background","props","odd","Columns","value","classes","TableCell","className","text","style","maxWidth","wordBreak","checkedRow","backgroundColor","Rows","key","columnIndex","useState","checked","setChecked","copyStringToClipboard","str","el","document","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","error","console","log","length","Fragment","TableRow","Button","size","width","variant","onClick","button","map","i","index","display","alignItems","flexDirection","column","input_container","justifyContent","marginTop","table_container","input_button","fontSize","selector","App","table","setTable","columnSelector","setColumnSelector","type","id","onChange","input","getElementById","readXlsxFile","files","then","rows","Select","native","e","target","Table","aria-label","TableHead","TableBody","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9912357.chunk.js","sourcesContent":["/* eslint-disable react/display-name */\nimport React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    row: { background: (props) => (props.odd ? '#effefe' : '#fff') },\n}));\n\nfunction Columns({ value, odd }) {\n    const classes = useStyles({ odd });\n    return (\n        <TableCell className={classes.text} style={{ maxWidth: 65, wordBreak: 'break-all' }}>\n            {value}\n        </TableCell>\n    );\n}\nexport default Columns;\n","/* eslint-disable react/display-name */\nimport React, { useState } from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles((theme) => ({\n    row: { background: '#fff' },\n    checkedRow: { backgroundColor: '#1abc9c' }\n}));\n\n\nfunction Rows({ row, key, columnIndex = 0 }) {\n    const [checked, setChecked] = useState(false);\n\n    const classes = useStyles({ checked });\n\n\n    function copyStringToClipboard(str) {\n        try {\n            // Create new element\n            var el = document.createElement('textarea');\n            // Set value (string to be copied)\n            el.value = str;\n            // Set non-editable to avoid focus and move outside of view\n            el.setAttribute('readonly', '');\n            el.style = { position: 'absolute', left: '-9999px' };\n            document.body.appendChild(el);\n            // Select text inside element\n            el.select();\n            // Copy text to clipboard\n            document.execCommand('copy');\n            // Remove temporary element\n            document.body.removeChild(el);\n        } catch (error) {\n            console.log(error);\n        } finally {\n\n            setChecked(true);\n        }\n    }\n\n    return (\n        row.length > 0 && key !== 0 && (\n            <React.Fragment>\n                {checked ? (<TableRow className={classes.checkedRow}>\n                    <TableCell>\n                        <Button size='small'\n                            width={70}\n                            variant='outlined'\n                            onClick={() => {\n                                copyStringToClipboard(row[columnIndex]);\n                            }}\n                            className={classes.button}\n                        >copied✓\n                     </Button>\n                    </TableCell>\n                    {row.length > 0 && row.map((i, index) => <TableCell key={index}>{i}</TableCell>)}\n                </TableRow>) : (<TableRow className={classes.row}>\n                    <TableCell>\n                        <Button size='small'\n                            width={70}\n                            variant='outlined'\n                            onClick={() => {\n                                copyStringToClipboard(row[columnIndex]);\n\n                            }}\n                            className={classes.button}\n                        >copy\n                    </Button>\n                    </TableCell>\n                    {row.length > 0 && row.map((i, index) => <TableCell key={index}>{i}</TableCell>)}\n                </TableRow>)}\n            </React.Fragment>\n\n        )\n    );\n}\n\nexport default Rows;\n","import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Columns from './Columns'\nimport readXlsxFile from 'read-excel-file'\nimport { makeStyles } from '@material-ui/core';\nimport Rows from './Rows'\nimport Select from '@material-ui/core/Select';\nimport './App.css'\n\nconst useStyles = makeStyles((theme) => ({\n  body: { width: \"100%\", display: \"flex\", alignItems: \"center\", flexDirection: \"column\", },\n  column: { backgroundColor: \"#bdc3c7\" },\n  input_container: { width: \"30%\", display: \"flex\", justifyContent: \"space-around\", marginTop: \"3%\" },\n  table_container: { width: \"90%\", marginTop: \"2%\" },\n  input_button: { fontSize: 'calc(0.3vw + 8px)' },\n  selector: { fontSize: 'calc(0.3vw + 8px)' },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [table, setTable] = useState([]);\n  const [columnSelector, setColumnSelector] = useState();\n\n\n\n  function read_excel() {\n    const input = document.getElementById('input')\n    readXlsxFile(input.files[0]).then((rows) => {\n      // `rows` is an array of rows\n      // each row being an array of cells.\n      setTable(rows)\n    })\n\n  }\n\n  function create_table() {\n\n    return (\n      <Table size='small' aria-label='a dense table'>\n        <TableHead>\n          <TableRow className={classes.column}>\n            <TableCell>Action</TableCell>\n            {table[0].length > 0 && table[0].map((i, index) => <Columns value={i} key={index} />)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {table.map((row, index) => {\n            if (index !== 0) {\n              return <Rows row={row} key={index} columnIndex={columnSelector} />\n            }\n          })}\n        </TableBody>\n      </Table>\n    )\n  }\n\n\n  return (\n    <div className={classes.body} >\n      <div className={classes.input_container}>\n        <input type=\"file\" id=\"input\" onChange={read_excel} className={classes.input_button} />\n        <Select\n          native\n          value={columnSelector}\n          onChange={(e) => setColumnSelector(e.target.value)}\n          className={classes.selector}\n        >\n\n          {table.length > 0 && table[0].map((row, index) => <option value={index} key={index}>{row}</option>)}\n        </Select>\n      </div>\n      <div className={classes.table_container}>\n        {table.length > 0 && create_table()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}